{"ast":null,"code":"var _jsxFileName = \"E:\\\\Frontend Courses\\\\React-Course-Learning\\\\Section21-React-Router\\\\router-project\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport Events from \"./pages/Events\";\nimport EventDetails from \"./pages/EventDetails\";\nimport NewEvent from \"./pages/NewEvent\";\nimport EditEvent from \"./pages/EditEvent\";\nimport EventsRoot from \"./pages/EventsRoot\";\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const router = createBrowserRouter([{\n    path: '/',\n    children: [{\n      path: 'events',\n      element: /*#__PURE__*/_jsxDEV(EventsRoot, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 20\n      }, this),\n      children: [{\n        path: ':eventId',\n        element: /*#__PURE__*/_jsxDEV(EventDetails, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 42\n        }, this)\n      }, {\n        path: 'new',\n        element: /*#__PURE__*/_jsxDEV(NewEvent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 37\n        }, this)\n      }, {\n        path: ':eventId/edit',\n        element: /*#__PURE__*/_jsxDEV(EditEvent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 47\n        }, this)\n      }]\n    }]\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(RouterProvider, {\n      router: router\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","Events","EventDetails","NewEvent","EditEvent","EventsRoot","jsxDEV","_jsxDEV","App","router","path","children","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Frontend Courses/React-Course-Learning/Section21-React-Router/router-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport Events from \"./pages/Events\";\nimport EventDetails from \"./pages/EventDetails\";\nimport NewEvent from \"./pages/NewEvent\";\nimport EditEvent from \"./pages/EditEvent\";\nimport EventsRoot from \"./pages/EventsRoot\";\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nfunction App() {\n  const router = createBrowserRouter([\n    {\n      path: '/',\n      children: [\n        {\n          path: 'events',\n          element: <EventsRoot />,\n          children: [\n            { path: ':eventId', element: <EventDetails /> },\n            { path: 'new', element: <NewEvent /> },\n            { path: ':eventId/edit', element: <EditEvent /> },\n          ]\n        },\n\n\n      ]\n    }\n  ])\n  return <div>\n    <RouterProvider router={router} />\n  </div>;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA,SAASA,cAAc,EAAEC,mBAAmB,QAAQ,kBAAkB;AACtE,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,UAAU,MAAM,oBAAoB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,MAAM,GAAGT,mBAAmB,CAAC,CACjC;IACEU,IAAI,EAAE,GAAG;IACTC,QAAQ,EAAE,CACR;MACED,IAAI,EAAE,QAAQ;MACdE,OAAO,eAAEL,OAAA,CAACF,UAAU;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MACvBL,QAAQ,EAAE,CACR;QAAED,IAAI,EAAE,UAAU;QAAEE,OAAO,eAAEL,OAAA,CAACL,YAAY;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE,CAAC,EAC/C;QAAEN,IAAI,EAAE,KAAK;QAAEE,OAAO,eAAEL,OAAA,CAACJ,QAAQ;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE,CAAC,EACtC;QAAEN,IAAI,EAAE,eAAe;QAAEE,OAAO,eAAEL,OAAA,CAACH,SAAS;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE,CAAC;IAErD,CAAC;EAIL,CAAC,CACF,CAAC;EACF,oBAAOT,OAAA;IAAAI,QAAA,eACLJ,OAAA,CAACR,cAAc;MAACU,MAAM,EAAEA;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AACR;AAACC,EAAA,GAtBQT,GAAG;AAwBZ,eAAeA,GAAG;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}