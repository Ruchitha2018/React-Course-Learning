{"ast":null,"code":"var _jsxFileName = \"E:\\\\Frontend Courses\\\\React-Course-Learning\\\\Section21-React-Router\\\\router-project\\\\frontend\\\\src\\\\pages\\\\Events.js\",\n  _s = $RefreshSig$();\nimport EventsList from '../components/EventsList';\nimport { useLoaderData, json } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Events() {\n  _s();\n  const events = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n_s(Events, \"0qsQ0LJMbp4ZAcOenpedLepO/y4=\", false, function () {\n  return [useLoaderData];\n});\n_c = Events;\nexport default Events;\nexport async function loader() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // throw new Response(JSON.stringify({ message: 'COuld not fetch Events' }), {\n    //  status: 500,\n    // })\n    throw json({\n      message: 'Could not fetch events'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"names":["EventsList","useLoaderData","json","jsxDEV","_jsxDEV","Fragment","_Fragment","Events","_s","events","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","message","status","resData","$RefreshReg$"],"sources":["E:/Frontend Courses/React-Course-Learning/Section21-React-Router/router-project/frontend/src/pages/Events.js"],"sourcesContent":["import EventsList from '../components/EventsList';\r\nimport { useLoaderData, json } from 'react-router-dom';\r\n\r\nfunction Events() {\r\n const events = useLoaderData();\r\n return (\r\n  <>\r\n   <EventsList events={events} />\r\n  </>\r\n );\r\n}\r\n\r\nexport default Events;\r\n\r\nexport async function loader() {\r\n const response = await fetch('http://localhost:8080/events');\r\n\r\n if (!response.ok) {\r\n  // throw new Response(JSON.stringify({ message: 'COuld not fetch Events' }), {\r\n  //  status: 500,\r\n  // })\r\n  throw json({\r\n   message: 'Could not fetch events'\r\n  }, {\r\n   status: 500,\r\n  })\r\n } else {\r\n  const resData = await response.json();\r\n  return resData.events;\r\n }\r\n}"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,0BAA0B;AACjD,SAASC,aAAa,EAAEC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvD,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAMC,MAAM,GAAGR,aAAa,CAAC,CAAC;EAC9B,oBACCG,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACCN,OAAA,CAACJ,UAAU;MAACS,MAAM,EAAEA;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAC7B,CAAC;AAEL;AAACN,EAAA,CAPQD,MAAM;EAAA,QACCN,aAAa;AAAA;AAAAc,EAAA,GADpBR,MAAM;AASf,eAAeA,MAAM;AAErB,OAAO,eAAeS,MAAMA,CAAA,EAAG;EAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACjB;IACA;IACA;IACA,MAAMjB,IAAI,CAAC;MACVkB,OAAO,EAAE;IACV,CAAC,EAAE;MACFC,MAAM,EAAE;IACT,CAAC,CAAC;EACH,CAAC,MAAM;IACN,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAACf,IAAI,CAAC,CAAC;IACrC,OAAOoB,OAAO,CAACb,MAAM;EACtB;AACD;AAAC,IAAAM,EAAA;AAAAQ,YAAA,CAAAR,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}